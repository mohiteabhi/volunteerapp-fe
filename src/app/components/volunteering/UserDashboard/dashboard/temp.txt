dashboard.html:
<div class="dashboard-container">
  <!-- Header Section -->
  <div class="welcome-section">
    <div class="welcome-content">
      <h1 class="welcome-title">Welcome back, {{ userName }}!</h1>
      <p class="welcome-subtitle">
        Ready to make a difference? Join meaningful events in your community or organize your own social impact initiative.
      </p>
    </div>
    <div class="hero-illustration">
      <i class="pi pi-users hero-icon"></i>
    </div>
  </div>

  <!-- Main Action Cards -->
  <div class="action-section">
    <div class="section-header">
      <h2>What would you like to do today?</h2>
      <p>Choose your path to creating positive change in your community</p>
    </div>

    <div class="action-cards">
      <!-- Search Events Card -->
      <div class="action-card search-card">
        <div class="card-header">
          <i class="pi pi-search card-icon"></i>
          <h3>Find Events to Join</h3>
        </div>
        <p class="card-description">
          Discover volunteer opportunities and social work events happening in your area. 
          Connect with like-minded people and contribute to causes you care about.
        </p>
        
        <div class="search-container">
          <div class="p-inputgroup">
            <input 
              type="text" 
              pInputText 
              placeholder="Search events by location, cause, or keyword..." 
              [(ngModel)]="searchQuery"
              (keypress)="onKeyPress($event)"
              class="search-input"
            />
            <button 
              pButton 
              type="button" 
              icon="pi pi-search" 
              class="search-button"
              (click)="onSearchEvents()"
              [disabled]="!searchQuery.trim()"
            ></button>
          </div>
        </div>

        <div class="popular-searches">
          <span class="popular-label">Popular searches:</span>
          <div class="search-tags">
            <span class="search-tag" (click)="searchQuery = 'education'; onSearchEvents()">Education</span>
            <span class="search-tag" (click)="searchQuery = 'environment'; onSearchEvents()">Environment</span>
            <span class="search-tag" (click)="searchQuery = 'healthcare'; onSearchEvents()">Healthcare</span>
            <span class="search-tag" (click)="searchQuery = 'community'; onSearchEvents()">Community</span>
          </div>
        </div>
      </div>

      <!-- Organize Event Card -->
      <div class="action-card organize-card">
        <div class="card-header">
          <i class="pi pi-plus-circle card-icon"></i>
          <h3>Organize an Event</h3>
        </div>
        <p class="card-description">
          Have an idea for a social impact event? Create and manage your own volunteer opportunity. 
          Bring together passionate individuals to make a real difference.
        </p>
        
        <div class="organize-features">
          <div class="feature-item">
            <i class="pi pi-check-circle"></i>
            <span>Easy event creation</span>
          </div>
          <div class="feature-item">
            <i class="pi pi-check-circle"></i>
            <span>Volunteer management</span>
          </div>
          <div class="feature-item">
            <i class="pi pi-check-circle"></i>
            <span>Real-time coordination</span>
          </div>
        </div>

        <button 
          pButton 
          type="button" 
          label="Start Organizing" 
          icon="pi pi-arrow-right"
          class="organize-button"
          (click)="onOrganizeEvent()"
        ></button>
      </div>
    </div>
  </div>

  <!-- Stats Section -->
  <div class="stats-section">
    <div class="stats-container">
      <div class="stat-item">
        <div class="stat-number">2,500+</div>
        <div class="stat-label">Active Volunteers</div>
      </div>
      <div class="stat-item">
        <div class="stat-number">450+</div>
        <div class="stat-label">Events Organized</div>
      </div>
      <div class="stat-item">
        <div class="stat-number">15,000+</div>
        <div class="stat-label">Lives Impacted</div>
      </div>
    </div>
  </div>
</div>

.ts:
import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-dashboard',
  templateUrl: './dashboard.component.html',
  styleUrls: ['./dashboard.component.scss']
})
export class DashboardComponent implements OnInit {
  searchQuery: string = '';
  userName: string = 'Volunteer'; // This should come from your auth service

  constructor(private router: Router) { }

  ngOnInit(): void {
    // Initialize component, get user data from auth service
    this.getUserName();
  }

  getUserName(): void {
    
  }

  onSearchEvents(): void {
    if (this.searchQuery.trim()) {
      console.log('Searching for events:', this.searchQuery);
      this.router.navigate(['/city-events'], { queryParams: { search: this.searchQuery } });
    }
  }

  onOrganizeEvent(): void {
    console.log('Navigate to organize event page');
    this.router.navigate(['/organize-event']);
  }

  onKeyPress(event: KeyboardEvent): void {
    if (event.key === 'Enter') {
      this.onSearchEvents();
    }
  }
}

// Color variables matching your landing page
$primary-orange: #ff9a56;
$primary-purple: #8b5cf6;
$light-blue: #b8d4e3;
$background-blue: #c5d9e8;
$white: #ffffff;
$text-dark: #374151;
$text-gray: #6b7280;
$success-green: #10b981;

.dashboard-container {
  min-height: 100vh;
  background: linear-gradient(135deg, $background-blue 0%, $light-blue 100%);
  padding: 2rem 1rem;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

  @media (max-width: 768px) {
    padding: 1rem 0.5rem;
  }
}

// Welcome Section
.welcome-section {
  display: flex;
  align-items: center;
  justify-content: space-between;
  max-width: 1200px;
  margin: 0 auto 3rem;
  background: $white;
  border-radius: 20px;
  padding: 2.5rem;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);

  @media (max-width: 768px) {
    flex-direction: column;
    text-align: center;
    padding: 2rem 1.5rem;
    margin-bottom: 2rem;
  }
}

.welcome-content {
  flex: 1;
  margin-right: 2rem;

  @media (max-width: 768px) {
    margin-right: 0;
    margin-bottom: 1.5rem;
  }
}

.welcome-title {
  font-size: 2.5rem;
  font-weight: 700;
  color: $primary-purple;
  margin-bottom: 1rem;
  line-height: 1.2;

  @media (max-width: 768px) {
    font-size: 2rem;
  }
}

.welcome-subtitle {
  font-size: 1.1rem;
  color: $text-gray;
  line-height: 1.6;
  margin: 0;
}

.hero-illustration {
  display: flex;
  align-items: center;
  justify-content: center;
}

.hero-icon {
  font-size: 5rem;
  color: $primary-orange;
  opacity: 0.8;

  @media (max-width: 768px) {
    font-size: 3.5rem;
  }
}

// Action Section
.action-section {
  max-width: 1200px;
  margin: 0 auto 3rem;
}

.section-header {
  text-align: center;
  margin-bottom: 2.5rem;

  h2 {
    font-size: 2rem;
    font-weight: 600;
    color: $text-dark;
    margin-bottom: 0.5rem;

    @media (max-width: 768px) {
      font-size: 1.6rem;
    }
  }

  p {
    font-size: 1rem;
    color: $text-gray;
    margin: 0;
  }
}

.action-cards {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;

  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
}

.action-card {
  background: $white;
  border-radius: 16px;
  padding: 2rem;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  border: 2px solid transparent;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.12);
  }

  @media (max-width: 768px) {
    padding: 1.5rem;
  }
}

.search-card {
  &:hover {
    border-color: $primary-orange;
  }
}

.organize-card {
  &:hover {
    border-color: $primary-purple;
  }
}

.card-header {
  display: flex;
  align-items: center;
  margin-bottom: 1rem;

  h3 {
    font-size: 1.4rem;
    font-weight: 600;
    color: $text-dark;
    margin: 0;
  }
}

.card-icon {
  font-size: 1.8rem;
  margin-right: 0.75rem;
  
  .search-card & {
    color: $primary-orange;
  }
  
  .organize-card & {
    color: $primary-purple;
  }
}

.card-description {
  color: $text-gray;
  line-height: 1.6;
  margin-bottom: 1.5rem;
  font-size: 0.95rem;
}

// Search Container
.search-container {
  margin-bottom: 1.5rem;
}

.search-input {
  border-radius: 12px !important;
  padding: 0.75rem 1rem !important;
  font-size: 0.95rem !important;
  border: 2px solid #e5e7eb !important;
  
  &:focus {
    border-color: $primary-orange !important;
    box-shadow: 0 0 0 3px rgba(255, 154, 86, 0.1) !important;
  }
}

.search-button {
  background: $primary-orange !important;
  border: none !important;
  border-radius: 0 12px 12px 0 !important;
  padding: 0.75rem 1.25rem !important;
  
  &:hover:not(:disabled) {
    background: darken($primary-orange, 10%) !important;
  }
  
  &:disabled {
    opacity: 0.6 !important;
  }
}

// Popular Searches
.popular-searches {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.5rem;
}

.popular-label {
  font-size: 0.85rem;
  color: $text-gray;
  font-weight: 500;
}

.search-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.search-tag {
  background: lighten($primary-orange, 35%);
  color: darken($primary-orange, 20%);
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.8rem;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background: lighten($primary-orange, 25%);
    transform: translateY(-1px);
  }
}

// Organize Features
.organize-features {
  margin-bottom: 2rem;
}

.feature-item {
  display: flex;
  align-items: center;
  margin-bottom: 0.75rem;
  
  i {
    color: $success-green;
    margin-right: 0.5rem;
    font-size: 0.9rem;
  }
  
  span {
    color: $text-gray;
    font-size: 0.9rem;
  }
}

.organize-button {
  background: $primary-purple !important;
  border: none !important;
  border-radius: 12px !important;
  padding: 0.75rem 1.5rem !important;
  font-weight: 600 !important;
  width: 100%;
  
  &:hover {
    background: darken($primary-purple, 10%) !important;
  }
}

// Stats Section
.stats-section {
  max-width: 1200px;
  margin: 0 auto;
}

.stats-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  background: $white;
  border-radius: 16px;
  padding: 2rem;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);

  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 1.5rem;
    padding: 1.5rem;
  }
}

.stat-item {
  text-align: center;
}

.stat-number {
  font-size: 2.5rem;
  font-weight: 700;
  color: $primary-purple;
  margin-bottom: 0.5rem;

  @media (max-width: 768px) {
    font-size: 2rem;
  }
}

.stat-label {
  color: $text-gray;
  font-weight: 500;
  font-size: 0.95rem;
}

// Responsive adjustments
@media (max-width: 480px) {
  .dashboard-container {
    padding: 1rem 0.25rem;
  }
  
  .welcome-section, .action-card, .stats-container {
    padding: 1.25rem;
  }
  
  .welcome-title {
    font-size: 1.75rem;
  }
  
  .section-header h2 {
    font-size: 1.4rem;
  }
}